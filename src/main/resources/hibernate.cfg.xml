<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    http://www.springframework.org/schema/jee 
    http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--配置数据源 这里是使用的是c3p0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />  <!--数据库连接驱动-->
        <property name="jdbcUrl" value="${jdbc.url}" />     <!--数据库地址-->
        <property name="user" value="${jdbc.username}" />   <!--用户名-->
        <property name="password" value="${jdbc.password}" />   <!--密码-->
        <property name="maxPoolSize" value="40" />      <!--最大连接数-->
        <property name="minPoolSize" value="1" />       <!--最小连接数-->
        <property name="initialPoolSize" value="10" />      <!--初始化连接池内的数据库连接-->
        <property name="maxIdleTime" value="20" />  <!--最大空闲时间-->
    </bean>

    <!-- 配置SessionFactory -->
<!--     	<bean id="sessionFactory" -->
<!-- 		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
        <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.store.entity" />
	  <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> <!--hibernate根据实体自动生成数据库表-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>   <!--指定数据库方言-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>     <!--在控制台显示执行的数据库操作语句-->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>     <!--在控制台显示执行的数据哭操作语句（格式）-->
<!--             <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop> -->
<!--                        <prop key="hibernate.current_session_context_class">thread</prop> -->
            </props>
        </property>
    </bean>
<!--     <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> -->
        <!--扫描PO类-->
<!-- 		<property name="packagesToScan"> -->
<!-- 			<list> -->
<!-- 				权限相关PO -->
<!-- 				<value>com.fpi.epoch.pms.entity.po</value> -->
<!-- 				文件服务相关PO -->
<!-- 				<value>com.fpi.common.file.entity.po</value> -->
<!-- 				ENV -->
<!-- 				<value>com.fpi.prd.env.export.entity.po</value>	 -->
<!-- 				agms			 -->
<!-- 				<value>com.fpi.prd.agms.entity.po</value>	 -->
<!-- 				common -->
<!-- 				<value>com.fpi.prd.bims.entity.po</value> -->
<!-- 			</list> -->
<!-- 		</property> -->

    <!-- 事务配置 声明式事务-->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- 使用annotation定义事务 -->
    <!-- 开启事务注解，标注@Transactional的类和方法将具有事务性 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
<!-- 拦截器方式配置事物 -->
<!-- 	<tx:advice id="transactionAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="append*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="repair" propagation="REQUIRED" rollback-for="Exception"/> -->
<!-- 			<tx:method name="delAndRepair" propagation="REQUIRED" rollback-for="Exception"/> -->

<!-- 			<tx:method name="get*" propagation="SUPPORTS"  read-only="true" />   -->
<!-- 			<tx:method name="find*" propagation="SUPPORTS"  read-only="true" />   -->
<!-- 			<tx:method name="load*" propagation="SUPPORTS"  read-only="true" />   -->
<!-- 			<tx:method name="search*" propagation="SUPPORTS"  read-only="true" />   -->
<!-- 			<tx:method name="datagrid*" propagation="SUPPORTS"  read-only="true" />   -->

<!-- 			<tx:method name="*" propagation="SUPPORTS"  read-only="true" />   -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="transactionPointcut" expression="execution(* com.store.dao..*.*(..))" /> -->
<!-- 		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" /> -->
<!-- 	</aop:config> -->
	
	
    
 	<!-- 定义hibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

 	<!--定义jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>	
<!-- 	<bean id="GenericHibernateDao" class="com.store.daoImpl.GenericHibernateDao"> -->
<!-- 	<property name="hibernateTemplate" ref="hibernateTemplate"></property> -->
<!--  </bean> -->
	<bean id="BaseDaoImpl" class="com.store.daoImpl.BaseDaoImpl">
  <property name="hibernateTemplate" ref="hibernateTemplate"></property>
 </bean>
 <!-- 让sql支持具名参数 --> 
	<bean id="namedParameterJdbcTemplate"  class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">  
   	 	<constructor-arg ref="dataSource" />  
	</bean>  
</beans>